<mvc:View xmlns:mvc="sap.ui.core.mvc"
    xmlns:core="sap.ui.core"
    xmlns:f="sap.ui.layout.form"
    xmlns="sap.m"
    xmlns:smartTable="sap.ui.comp.smarttable"
    xmlns:tt="sap.ui.table" controllerName="com.agel.mmts.vendorpackinglistcreate.view.blocks.createView.packingListContainsTable.PackingListContainsTableController">

    <Table id="idBOQItemTable" items="{path: 'packingListContainsModel>/items'}" autoPopinMode="true" growingThreshold="5" growing="true" fixedLayout="false">
        <headerToolbar>
            <OverflowToolbar >
                <content>
                    <ToolbarSpacer></ToolbarSpacer>
                    <Button id="idButtonGenerate" text="{= ${IsProcessOneCompletes} ? 'Regenerate Inner Packaging List' : 'Generate Inner Packaging List'}" press="onGeneratePackingList" visible="{= ${objectViewModel>/isPackingListInEditModel} ? true : false}"></Button>
                </content>
            </OverflowToolbar>
        </headerToolbar>
        <columns>
            <Column>
                <Text text="Material Code"/>
            </Column>
            <Column>
                <Text text="Name"/>
            </Column>
            <Column hAlign="Center">
                <Text text="Dispatch Quantity"/>
            </Column>
            <Column>
                <Text text="UOM"/>
            </Column>
            <Column>
                <Text text="Packaging Type"/>
            </Column>
            <Column>
                <Text text="No. of Packages"/>
            </Column>
        </columns>
        <items>
            <ColumnListItem>
                <cells>
                    <ObjectIdentifier title="{packingListContainsModel>MaterialCode}"/>
                    <Text text="{packingListContainsModel>Name}"/>
                    <Text text="{packingListContainsModel>DispatchQty}" />
                    <Text text="{packingListContainsModel>UOM}"/>
                    <Select id="idPackagingTypeSelect" forceSelection="false" selectedKey="{packingListContainsModel>PackagingTypeId}" selectedItem="{packingListContainsModel>PackagingType}" items="{
                             path: '/MasterPackagingTypeSet',
                             templateShareable:false
                            }" change="onPackingListTypeChange" editable="{= ${objectViewModel>/isPackingListInEditModel} ? true : false}">
                        <core:Item key="{ID}" text="{Name}" />
                    </Select>
                    <Input value="{packingListContainsModel>NumberOfPackages}" editable="{= ${objectViewModel>/isPackingListInEditModel} ? true : false}" change="onChaneNumberOfPackage" type="Number" width="40%"/>
                </cells>
            </ColumnListItem>
        </items>
    </Table>

    <Table id="idPackagingTable" items="{path: 'InnerPackagingModel>/items'}" autoPopinMode="true" growingThreshold="5" growing="true" fixedLayout="false" class="sapUiLargeMarginTop">
        <headerToolbar>
            <OverflowToolbar >
                <content>
                    <Title text="Generated Inner Packaging" level="H2"></Title>
                </content>
            </OverflowToolbar>
        </headerToolbar>
        <columns>
            <Column>
                <Text text="Packaging Type"/>
            </Column>
            <Column >
                <Text text="Material Name"/>
            </Column>
            <Column hAlign="Center">
                <Text text="Packaging Quantity"/>
            </Column>
            <Column>
                <Text text="UOM"/>
            </Column>
        </columns>
        <items>
            <ColumnListItem>
                <cells>
                    <Text text="{InnerPackagingModel>PackagingType}"/>
                    <Text text="{InnerPackagingModel>Name}"/>
                    <Input value="{InnerPackagingModel>PackagingQty}" width="20%" editable="{= ${objectViewModel>/isPackingListInEditModel} ? true : false}"/>
                    <Text text="{InnerPackagingModel>UOM}"/>
                </cells>
            </ColumnListItem>
        </items>
    </Table>

</mvc:View>


